class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
def rotateRight(head, k):
    if not head or not head.next or k == 0:
        return head
    length = 1
    tail = head
    while tail.next:
        length += 1
        tail = tail.next
    k = k % length
    if k == 0:
        return head
    count = length - k
    prev = None
    curr = head
    while count > 0:
        prev = curr
        curr = curr.next
        count -= 1
    new_head = curr
    prev.next = None
    tail.next = head
    return new_head
head = ListNode(1)
head.next = ListNode(2)
head.next.next = ListNode(3)
head.next.next.next = ListNode(4)
head.next.next.next.next = ListNode(5)
k = 2
rotated_head = rotateRight(head, k)
while rotated_head:
    print(rotated_head.val, end=" -> ")
    rotated_head = rotated_head.next
